---
type: Function
name: ItemPropertyBonusLevelSpell
shortdesc: Sets a "bonus spell of a specified level" itemproperty.
return: itemproperty
parameters:
  - type: int
    name: nClass
    desc: | IP_CONST_CLASS_*

  - type: int
    name: nSpellLevel
    desc: | Level of the bonus spell; 0 to 9 are valid.

description: |
  Sets item property Bonus level spell (an extra spell of the indicated type and level). You must specify the class constant(IP_CONST_CLASS_*) of the bonus spell (MUST BE a spell casting class) and the level of the bonus spell, which should be an integer between 0 and 9.
remarks: |
  The itemproperty commands are special constructors - they construct an itemproperty "object" which can then be applied to an item using the AddItemProperty command, much like effects need to be first constructed, then applied with ApplyEffectToObject. 
  It will often be a good idea to remove similar itemproperties from the item first. There's a command in the "x2_inc_itemprop" include file called IPSafeAddItemProperty which will do that for you. Check IPSafeAddItemProperty for current bug report. 
  The IP_CONST_CLASS_* constant can be retrieved off this type of item property using GetItemPropertySubType. The level of the spell can be retrieved using GetItemPropertCostTableValue. 
version: 1.61
example: |
  #include "x2_inc_itemprop"
  //The include is for the IPSafeAddItemProperty function
  //Makes the PC speaker's helmet grant the PC an extra level 5 wizard spell
  void main()
  {
  itemproperty ipAdd = ItemPropertyBonusLevelSpell(IP_CONST_CLASS_WIZARD, 5);
  object oPC=GetPCSpeaker();
  object oItem = GetItemInSlot(INVENTORY_SLOT_HEAD, oPC);
  if (!GetIsObjectValid(oItem)) return;
  IPSafeAddItemProperty(oItem, ipAdd);
  }
seealso:
  functions:
    - AddItemProperty
    - IPSafeAddItemProperty
  categories:
    - Item Creation
  constants:
    - IP_CONST_CLASS_* Constants
author: Lilac Soul
editor: Peter Busby

