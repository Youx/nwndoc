---
type: Function
name: ItemPropertyEnhancementBonusVsAlign
shortdesc: Sets an "enhancement bonus versus alignment group" itemproperty.
return: itemproperty
parameters:
  - type: int
    name: nAlignGroup
    desc: | IP_CONST_ALIGNMENTGROUP_*

  - type: int
    name: nBonus
    desc: | How much to enhance weapon; 1 to 20 are valid

description: |
  Sets item property Enhancement bonus vs. an alignment group, such as Evil or Lawful. You need to specify the alignment group constant (IP_CONST_ALIGNMENTGROUP_*) and the enhancement bonus, which should be an integer between 1 and 20.
remarks: |
  Only melee weapons can have enhancement bonuses - neither ranged weapons nor ammunition can hold such an itemproperty. 
  The itemproperty commands are special constructors - they construct an itemproperty "object" which can then be applied to an item using the AddItemProperty command, much like effects need to be first constructed, then applied with ApplyEffectToObject. 
  It will often be a good idea to remove similar itemproperties from the item first. There's a command in the "x2_inc_itemprop" include file called IPSafeAddItemProperty which will do that for you. Check IPSafeAddItemProperty for current bug report. 
  The IP_CONST_ALIGNMENTGROUP_* constant can be retrieved off this type of item property using GetItemPropertySubType. The bonus can be retrieved using GetItemPropertCostTableValue.
version: 1.62
example: |
  #include "x2_inc_itemprop"
  //The include is for the IPSafeAddItemProperty function
  //Gives the PC speaker's onhand weapon a +15 enhancement bonus against good
  void main()
  {
  object oPC=GetPCSpeaker();
  object oItem = GetItemInSlot(INVENTORY_SLOT_RIGHTHAND, oPC);
  if (!GetIsObjectValid(oItem)) return;
  itemproperty ipAdd = ItemPropertyEnhancementBonusVsAlign(IP_CONST_ALIGNMENTGROUP_GOOD, 15);
  IPSafeAddItemProperty(oItem, ipAdd);
  }
seealso:
  functions:
    - AddItemProperty
    - IPSafeAddItemProperty
  categories:
    - Item Creation
  constants:
    - IP_CONST_ALIGNMENTGROUP_* Constants
author: Lilac Soul
editor: Peter Busby
additional_contributors:
  - hbunny
