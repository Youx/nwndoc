---
type: Function
name: SetSkyBox
shortdesc: Changes the sky that is displayed in the specified area.
return: void
parameters:
  - type: int
    name: nSkyBox
    desc: | A SKYBOX_* constant (associated with skyboxes.2da)

  - type: object
    name: oArea
    default: OBJECT_INVALID
    desc: | The area the skybox needs changing in (Default: OBJECT_INVALID)

description: |
  Changes the sky that is displayed in the specified area, to one of the SKYBOX_ constants (associated with skyboxes.2da). 
  If no valid area (or object) is specified, it uses the area of caller. 
  If an object other than an area is specified, will use the area that the object is currently in (noting Modules cannot be in area's).
remarks: |
  This simply will change it to one of the other skybox's, instantly. There can be no transition. 
  To change a skybox to a newly added one, you of course must reference a skyboxes.2da line in the nSkyBox parameter. 
  This is best used to change a skybox according to the weather, or an other really evil or really good things going on (a skybox depicting hell might be useful if your evil demon lord decides to invade your nice city). Normally, you just want to change the skybox according to the weather however. Used in conjunction with SetWeather(), you can change both at once.
version: 1.64
example: |
  // Change the weather in OBJECT_SELF's area to stormy, and
  // change the skybox to SKYBOX_GRASS_STORM.
  void main()
  {
      // Define us, the area to change (perhaps using the On Enter event)
      object oArea = OBJECT_SELF;
      // Change the weather.
      SetWeather(oArea, WEATHER_RAIN);
      // Set the skybox.
      SetSkyBox(SKYBOX_GRASS_STORM, oArea);
  }
seealso:
  functions:
    - GetSkyBox
  categories:
    - Area
  constants:
    - SKYBOX_* Constants
author: Jasperre
editor: Mistress
additional_contributors:
  - Jasperre
