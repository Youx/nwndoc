---
type: Function
name: SetLocalArrayInt
shortdesc: Simulates storing a local integer in an array.
return: void
parameters:
  - type: object
    name: oidObject
    desc: | Object to store array on.

  - type: string
    name: sVarName
    desc: | Name of array.

  - type: int
    name: nVarNum
    desc: | Position (index) within array to store variable in.

  - type: int
    name: nValue
    desc: | The value to store in the array.

description: |
  Although this is hardly an array, it can be accessed like one, and can even be looped through. It works by creating a new local integer object on whatever object you passed in through the parameters. This local int is called sVarName + nVarNum, so in otherwords if the following is executed: 
  SetLocalArrayInt(oPC, "myarray", 1, 10); 
  What actually happens is: 
  SetLocalInt(oPC, "myarray1", 10); 
remarks: |
  Found in nw_o0_itemmaker.nss on line 22. 
  In essence, arrays are nice because they: 
  a) Allow for cleaner code, and 
  b) Allows you to make a simple loop statement to get many variables' values, rather than having to type a bunch of variable names yourself.
bugs: |
  Setting a value to a newly created object has some particular nuances. See SetLocalString(object, string, string) for more information.
requirements: |
  #include "nw_o0_itemmaker"
version: 1.28
example: |
  //Sets 10 variables quickly on the PC, using a for loop.
  //myarray1 is set to 1, myarray2 is set to 2, etc.
  #include "nw_o0_itemmaker"
  void main()
  {
       object oPC = GetPCSpeaker();
       int nLoop;
       for (nLoop=1; nLoop<=10; nLoop++)
       {
            SetLocalArrayInt(oPC, "myarray", nLoop, nLoop);
       }
  }
seealso:
  functions:
    - GetLocalArrayInt
    - GetLocalInt
    - SetLocalInt
  categories:
    - Local Variables
author: Lilac Soul
editor: Charles Feduke
additional_contributors:
  - Graziano Lenzi
